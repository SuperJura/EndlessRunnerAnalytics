@{
    ViewBag.Title = "Pickup";
}

<h2 class="text-center">Pickup data</h2>

<div class="jumbotron">
    <div class="row">
        <div class="col-md-3 col-sm-6 container">
            <div id="pickupsChart" class="bigDiv">Fetching data</div>
        </div>
        <div class="col-md-4 col-sm-6 container">
            <div id="meanTime">
                <table class="table">
                    <tbody>
                        <tr>
                            <td>Mean coins</td>
                            <td>@ViewBag.meanCoins</td>
                        </tr>
                        <tr>
                            <td>Mean Slow pickups</td>
                            <td>@ViewBag.meanSlow</td>
                        </tr>
                        <tr>
                            <td>Mean Easy pickups</td>
                            <td>@ViewBag.meanEasy</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            @{Html.RenderPartial("CountPicker", "Pickups");}
        </div>
        <div class="col-md-3">
            <a class="btn btn-primary" style="visibility:hidden" id="btnShowDetails">Show Run detail</a>
        </div>
    </div>
</div>

<script>
    google.charts.load('current', { packages: ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    var pickupsChart;
    var pickupsData;

    function drawChart()
    {
        var jsonData = JSON.parse(@Html.Raw(Json.Encode(ViewBag.pickups)))
        pickupsData = [['Runs', 'Coin', 'Slow', 'Easy']]
        $.each(jsonData, function (obj) {
            console.log(obj)
            pickupsData.push(([jsonData[obj].RunId, jsonData[obj].CoinCount, jsonData[obj].SlowCount, jsonData[obj].EasyCount]))
        })

        var data = google.visualization.arrayToDataTable(pickupsData);

        var options = {
            title: 'All Pickups data',
            curveType: 'function',
            legend: { position: 'bottom' }
        };

        pickupsChart = new google.visualization.LineChart(document.getElementById('pickupsChart'));
        google.visualization.events.addListener(pickupsChart, 'select', selectHandler);

        pickupsChart.draw(data, options);
    }

    function selectHandler() {
        var detailsBtn = document.getElementById('btnShowDetails');
        var selection = pickupsChart.getSelection();
        if (selection.length != 0) {
            detailsBtn.onclick = function () {
                window.location = "@Url.Action("RunDetails", "Runs")" + "?id=" + pickupsData[selection[0].row + 1][0] + "&back=Pickups";
            }
            detailsBtn.style.visibility = "visible";
        }
        else {
            detailsBtn.style.visibility = "hidden";
        }
    }
</script>